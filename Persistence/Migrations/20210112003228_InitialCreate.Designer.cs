// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210112003228_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Domain.Bag", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shipmentNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Number");

                    b.HasIndex("shipmentNumber");

                    b.ToTable("Bag");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Bag");
                });

            modelBuilder.Entity("Domain.Parcel", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DestinationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RecepientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<string>("bagNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Number");

                    b.HasIndex("bagNumber");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("Domain.Shipment", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AirPort")
                        .HasColumnType("int");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.ToTable("shipments");
                });

            modelBuilder.Entity("Domain.BagWithLetters", b =>
                {
                    b.HasBaseType("Domain.Bag");

                    b.Property<int>("NumberOfLetters")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("BagWithLetters");
                });

            modelBuilder.Entity("Domain.BagWithParcels", b =>
                {
                    b.HasBaseType("Domain.Bag");

                    b.HasDiscriminator().HasValue("BagWithParcels");
                });

            modelBuilder.Entity("Domain.Bag", b =>
                {
                    b.HasOne("Domain.Shipment", "shipment")
                        .WithMany("Bags")
                        .HasForeignKey("shipmentNumber");

                    b.Navigation("shipment");
                });

            modelBuilder.Entity("Domain.Parcel", b =>
                {
                    b.HasOne("Domain.BagWithParcels", "bag")
                        .WithMany("parcels")
                        .HasForeignKey("bagNumber");

                    b.Navigation("bag");
                });

            modelBuilder.Entity("Domain.Shipment", b =>
                {
                    b.Navigation("Bags");
                });

            modelBuilder.Entity("Domain.BagWithParcels", b =>
                {
                    b.Navigation("parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
